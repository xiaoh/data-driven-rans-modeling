/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4.1                                 |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

// FoamX Case Dictionary.

FoamFile
{
    version         2.0;
    format          ascii;

    root            "/Volumes/MacRAID/OpenFOAM/egp11-1.4.1/run/NACA0012";
    case            "RANS";
    instance        "system";
    local           "";

    class           dictionary;
    object          fvSchemes;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default         Gauss linear;
    grad(p)         Gauss linear;
    grad(U)         Gauss linear;
}

divSchemes
{
    default                       none;
    //div(phi,U)                    bounded Gauss linearUpwind grad(U);
    div(phi,U)                    bounded Gauss upwind;
    div(phi,nuTilda)              bounded Gauss linearUpwind grad(U);
    div(phi,k)                    bounded Gauss upwind;
    div(phi,omega)                bounded Gauss upwind;
    div(phi,epsilon)              bounded Gauss upwind;
    div((nuEff*dev(grad(U).T()))) Gauss linear;
    div((nuEff*dev(T(grad(U)))))  Gauss linear;
    div((nut*twoSymm(grad(U))))   Gauss linear;
    div((nut*grad(U)))   Gauss linear;
    div((Tau-((0.333333)*tr(Tau)))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;
    laplacian(nuEff,U) Gauss linear corrected;
    laplacian((1|A(U)),p) Gauss linear corrected;
    laplacian(DkEff,k) Gauss linear corrected;
    laplacian(DomegaEff,omega) Gauss linear corrected;
    laplacian(DREff,R) Gauss linear corrected;
    laplacian(DnuTildaEff,nuTilda) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
    interpolate(U)  linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p;
}


// ************************************************************************* //
